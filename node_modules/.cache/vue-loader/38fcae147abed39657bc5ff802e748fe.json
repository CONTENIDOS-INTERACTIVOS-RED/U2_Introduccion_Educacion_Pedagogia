{"remainingRequest":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/src/views/curso/Tema1.vue?vue&type=template&id=1e7fdd65&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/src/views/curso/Tema1.vue","mtime":1751510849219},{"path":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Introduccion_Educacion_Pedagogia/U2_Introduccion_Educacion_Pedagogia/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJuby50ZXh0LXVwcGVyY2FzZSg6dGl0dWxvPSInVW5pZGFkIDIuIFRlb3LDrWFzIHBlZGFnw7NnaWNhcyB5IHN1IGltcGFjdG8gZW4gbGEgZWR1Y2FjacOzbiciIDpzdWJUaXR1bG89IicxLiBJbnRyb2R1Y2Npw7NuIGEgbGFzIHRlb3LDrWFzIHBlZGFnw7NnaWNhcyciKQogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5vdmVyZmxvdy1oaWRkZW4KCiAgICAucm93Lm1iLTQKICAgICAgLmQtZmxleC5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICBkaXYuZC1mbGV4LmFsaWduLWl0ZW1zLWNlbnRlcihkYXRhLWFvcz0iZmFkZS1kb3duIikKICAgICAgICAgIGltZy5tZS00KHN0eWxlPSJ3aWR0aDogOTBweCIgc3JjPSdAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTcuc3ZnJywgYWx0PScnKQogICAgICAgICAgcC5wZS14bC01Lm1iLTAgQWwgYWRlbnRyYXJub3MgZW4gZWwgZXN0dWRpbyBkZSBsYXMgdGVvcsOtYXMgcGVkYWfDs2dpY2FzLCBub3MgZW5jb250cmFyZW1vcyBjb24gdW4gY29uanVudG8gZGUgY29uY2VwdG9zIGZ1bmRhbWVudGFsZXMgcXVlIGV4cGxpY2FuIHkgb3JpZW50YW4gbG9zIHByb2Nlc29zIGVkdWNhdGl2b3MuIAoKICAgIC5yb3cubWItNC5teC0wCiAgICAgIC5jb2wtMTIuY29sLXhsLTguZC1mbGV4LmZsZXgtY29sdW1uLmFsaWduLWl0ZW1zLWNlbnRlci5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmJnLXJvc2EucC00KGRhdGEtYW9zPSJmYWRlLXJpZ2h0IikKICAgICAgICBwLnRleHQtYm9sZC5tYi00Lm1lLWF1dG8gwr9RdcOpIGVzIHVuYSB0ZW9yw61hIHBlZGFnw7NnaWNhPwogICAgICAgIHAubWItMChkYXRhLWFvcz0iZmFkZS11cCIpIFB1ZWRlIGNvbnNpZGVyYXJzZSBjb21vIHVuIGNvbmp1bnRvIGVzdHJ1Y3R1cmFkbyBkZSBpZGVhcywgcHJpbmNpcGlvcyB5IG5vcm1hcywgcXVlIGludGVudGEgZXhwbGljYXIgZWwgcHJvY2VzbyBlZHVjYXRpdm8geSBvcmllbnRhciBsYXMgcHLDoWN0aWNhcyBkZSBlbnNlw7FhbnphLiBTZSB0cmF0YSBkZSB1biBtYXJjbyB0ZcOzcmljbyBxdWUgaGEgc2lkbyBjb25zdHJ1aWRvIGEgbG8gbGFyZ28gZGVsIHRpZW1wbywgZmFjaWxpdGFuZG8gZWwgYW7DoWxpc2lzIHkgbGEgY29tcHJlbnNpw7NuIGRlbCBwcm9jZXNvIGRlIGFwcmVuZGl6YWplIGVuIGxvcyBlc3R1ZGlhbnRlcywgYWRhcHTDoW5kb3NlIGEgc3VzIG5lY2VzaWRhZGVzIHkgYSBsb3MgY29udGV4dG9zIGVuIGxvcyBjdWFsZXMgc2UgZGVzZW52dWVsdmVuLgogICAgICAuZC1ub25lLmQteGwtYmxvY2suY29sLTQucHgtMChkYXRhLWFvcz0iZmFkZS1sZWZ0IikKICAgICAgICBpbWcuaC0xMDAoc3JjPSdAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTgucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKCiAgICAucm93Lm1iLTUKICAgICAgLmNvbC01LmQtbm9uZS5kLXhsLWJsb2NrKGRhdGEtYW9zPSJmYWRlLXJpZ2h0IikKICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTkucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICAgLmNvbC0xMi5jb2wteGwtNy5kLWZsZXguZmxleC1jb2x1bW4uYWxpZ24taXRlbXMtY2VudGVyKGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgIHAubWItNCBQb3IgZWplbXBsbywgdGVvcsOtYXMgY29tbyBlbCBjb25zdHJ1Y3RpdmlzbW8gZGUgSmVhbiBQaWFnZXQgeSBMZXYgVnlnb3Rza3ksIG8gZWwgZW5mb3F1ZSBkZWwgYXByZW5kaXphamUgc2lnbmlmaWNhdGl2byBwcm9wdWVzdG8gcG9yIERhdmlkIEF1c3ViZWwsIG9mcmVjZW4gcGVyc3BlY3RpdmFzIGRpc3RpbnRhcyBzb2JyZSBjw7NtbyBsb3MgZXN0dWRpYW50ZXMgY29uc3RydXllbiBzdSBjb25vY2ltaWVudG8uIEVzdG9zIGVuZm9xdWVzIHN1Z2llcmVuIHF1ZSBlbCBhcHJlbmRpemFqZSBubyBlcyBzb2xvIHVuIHByb2Nlc28gZGUgYWRxdWlzaWNpw7NuIGRlIGluZm9ybWFjacOzbiwgc2lubyB1biBhY3RvIGFjdGl2byBkZSBjb25zdHJ1Y2Npw7NuIGRlIHNpZ25pZmljYWRvcy4gTGEgdGVvcsOtYSBjb25zdHJ1Y3RpdmlzdGEsIHBvciBlamVtcGxvLCBwbGFudGVhIHF1ZSBlbCBjb25vY2ltaWVudG8gc2UgY29uc3RydXllIG1lZGlhbnRlIGxhIGludGVyYWNjacOzbiBjb24gZWwgZW50b3JubywgeSBubyBzaW1wbGVtZW50ZSBhIHRyYXbDqXMgZGUgbGEgdHJhbnNtaXNpw7NuIGRlIGNvbm9jaW1pZW50b3MuCiAgICAgICAgcC5tYi0wIEVzIGltcG9ydGFudGUgZGVzdGFjYXIgcXVlIGVsIGRvbWluaW8gZGUgbGFzIHRlb3LDrWFzIHBlZGFnw7NnaWNhcyBwcm9wb3JjaW9uYSB1biBtYXJjbyBkZSBhbsOhbGlzaXMgY3LDrXRpY28gcGFyYSByZWZsZXhpb25hciBzb2JyZSBsYXMgcHLDoWN0aWNhcyBlZHVjYXRpdmFzLiBBc8OtLCBsYSB0ZW9yw61hIHNlIGNvbnZpZXJ0ZSBlbiB1bmEgaGVycmFtaWVudGEgcXVlIHBlcm1pdGUgY3Vlc3Rpb25hciBsb3MgbcOpdG9kb3MgZGUgZW5zZcOxYW56YSwgaW5kYWdhciBlbiBsYSBlZmVjdGl2aWRhZCBkZSBsYXMgZXN0cmF0ZWdpYXMgeSBidXNjYXIgZm9ybWFzIGRlIG1lam9yYXIgbGEgY2FsaWRhZCBkZWwgYXByZW5kaXphamUuIERlIGVzdGEgbWFuZXJhLCBsYXMgdGVvcsOtYXMgcGVkYWfDs2dpY2FzIG5vIHNvbG8gZnVuZGFtZW50YW4gbGEgcHLDoWN0aWNhIGVkdWNhdGl2YSwgc2lubyBxdWUgdGFtYmnDqW4gZm9tZW50YW4gdW5hIGFjdGl0dWQgcmVmbGV4aXZhIHkgY3LDrXRpY2EgZW4gZWwgZWplcmNpY2lvIGRvY2VudGUuCgogICAgI3RfMV8xLnRpdHVsby1zZWd1bmRvCiAgICAgIGRpdi5kLWZsZXgKICAgICAgICBzcGFuLm1lLTMgMS4xICAKICAgICAgICBoMiBIaXN0b3JpYSB5IGV2b2x1Y2nDs24gZGUgbGFzIHRlb3LDrWFzIHBlZGFnw7NnaWNhcwoKICAgIC5yb3cubWItNQogICAgICAuY29sLTEyLmNvbC14bC03LmQtZmxleC5mbGV4LWNvbHVtbgogICAgICAgIHAgQWwgZXhwbG9yYXIgbGEgaGlzdG9yaWEgeSBldm9sdWNpw7NuIGRlIGxhcyB0ZW9yw61hcyBwZWRhZ8OzZ2ljYXMsIHNlIG9idGllbmUgdW5hIGNvbXByZW5zacOzbiBwcm9mdW5kYSBkZSBjw7NtbyBlc3RhcyBoYW4gbW9sZGVhZG8gbGEgZWR1Y2FjacOzbiBhIGxvIGxhcmdvIGRlbCB0aWVtcG8geSBkZSBzdSBpbXBvcnRhbmNpYSBlbiBsYSBjcmVhY2nDs24gZGUgcHLDoWN0aWNhcyBlZHVjYXRpdmFzIHNpZ25pZmljYXRpdmFzLiAKICAgICAgICBkaXYuZC1mbGV4LmFsaWduLWl0ZW1zLXN0YXJ0LmJnLWFtYXJpbGxvLnAtNC5tYi00KGRhdGEtYW9zPSJmYWRlLXJpZ2h0IikKICAgICAgICAgIGltZy5tZS0zKHN0eWxlPSJ3aWR0aDogOTBweCIgc3JjPSdAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTEwLnN2ZycsIGFsdD0nVGV4dG8gcXVlIGRlc2NyaWJhIGxhIGltYWdlbicpCiAgICAgICAgICAuZC1mbGV4LmZsZXgtY29sdW1uCiAgICAgICAgICAgIHAucGUteGwtMy5tYi0wKGRhdGEtYW9zPSJmYWRlLXVwIikgwr9TYWLDrWEgcXVlIGNhZGEgdGVvcsOtYSBwZWRhZ8OzZ2ljYSBoYSBzdXJnaWRvIGNvbW8gdW5hIHJlc3B1ZXN0YSBhIGxhcyBuZWNlc2lkYWRlcywgdmFsb3JlcyB5IGNvbm9jaW1pZW50b3MgcHJvcGlvcyBkZSBzdSBjb250ZXh0byBoaXN0w7NyaWNvLCByZWZsZWphbmRvIGFzw60gbGEgbWFuZXJhIGVuIHF1ZSBjYWRhIHNvY2llZGFkIGhhIGNvbmNlYmlkbyBlbCBhcHJlbmRpemFqZSB5IGVsIHBhcGVsIGRlIGxhIGVkdWNhY2nDs24gZW4gbGEgZm9ybWFjacOzbiBkZSBsb3MgaW5kaXZpZHVvcz8KICAgICAgLmQtbm9uZS5kLXhsLWJsb2NrLmNvbC14bC01Lm14LWF1dG8ubXQtNC5tdC14bC0wKGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctMTEucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykgIAoKICAgIC5yb3cubWItNQogICAgICAuY29sLTUuZC1ub25lLmQteGwtYmxvY2soZGF0YS1hb3M9ImZhZGUtcmlnaHQiKQogICAgICAgIGltZyhzcmM9J0AvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctMTIucG5nJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICAgLmNvbC0xMi5jb2wteGwtNy5kLWZsZXguZmxleC1jb2x1bW4uYWxpZ24taXRlbXMtY2VudGVyKGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgIHAubWItNCBQb3IgbG8gdGFudG8sIGFsIGFuYWxpemFyIGxhIGV2b2x1Y2nDs24gZGUgZXN0YXMgdGVvcsOtYXMsIG5vIHNvbG8gc2UgY29tcHJlbmRlbiBsYXMgYmFzZXMgc29icmUgbGFzIHF1ZSBkZXNjYW5zYSBlbCBzaXN0ZW1hIGVkdWNhdGl2byBhY3R1YWwsIHNpbm8gcXVlIHRhbWJpw6luIHNlIGFicmVuIHBvc2liaWxpZGFkZXMgcGFyYSBjdWVzdGlvbmFyIHkgZW5yaXF1ZWNlciBsYXMgcHLDoWN0aWNhcyBwZWRhZ8OzZ2ljYXMsIGFkYXB0w6FuZG9sYXMgYSBsb3MgcmV0b3MgZGVsIHByZXNlbnRlLgogICAgICAgIHAubWItMCBFbiBwcmltZXIgbHVnYXIsIGVzIGltcG9ydGFudGUgc2XDsWFsYXIgcXVlIGxhcyB0ZW9yw61hcyBwZWRhZ8OzZ2ljYXMgbm8gc3VyZ2llcm9uIGRlIG1hbmVyYSBhaXNsYWRhLCBzaW5vIHF1ZSBzZSBlbmN1ZW50cmFuIHByb2Z1bmRhbWVudGUgdmluY3VsYWRhcyBhbCBjb250ZXh0byBzb2NpYWwsIGN1bHR1cmFsIHkgY2llbnTDrWZpY28gZGUgY2FkYSDDqXBvY2EsIGNvbW8gc2UgcHJlc2VudGEgYSBjb250aW51YWNpw7NuLgoKICAgIEltYWdlbkluZm9ncmFmaWNhLmNvbG9yLXNlY3VuZGFyaW8ubWItNS5iZy1mdWxsLXdpZHRoCiAgICAgIHRlbXBsYXRlKHYtc2xvdDppbWFnZW4pCiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby91bmlkYWQvaW1nLTEzLnBuZycsIGFsdD0nVGV4dG8gcXVlIGRlc2NyaWJhIGxhIGltYWdlbicpCgogICAgICAudGFyamV0YS5iZy1henVsLTEucC00KHg9IjUwJSIgeT0iMTclIiBudW1lcm89IisiKQogICAgICAgIC5oNS5tYi0xIEFudGlndWEgR3JlY2lhCiAgICAgICAgcCBFbiBsYSBhbnRpZ3VhIEdyZWNpYSwgcG9yIGVqZW1wbG8sIGZpbMOzc29mb3MgY29tbyBTw7NjcmF0ZXMsIFBsYXTDs24geSBBcmlzdMOzdGVsZXMgZXN0YWJsZWNpZXJvbiBhbGd1bmFzIGRlIGxhcyBwcmltZXJhcyBpZGVhcyBzb2JyZSBsYSBlZHVjYWNpw7NuLCBjb25zaWRlcsOhbmRvbGEgdW4gbWVkaW8gcGFyYSBhbGNhbnphciBsYSB2aXJ0dWQgeSBsYSBjaXVkYWRhbsOtYSAoQ2FzdGlsbG8geSBMdW5hLCAyMDE3KS4gRW4gZXN0ZSBwZXJpb2RvLCBlbCBlbmZvcXVlIGVkdWNhdGl2byBzZSBjZW50cmFiYSBlbiBlbCBkZXNhcnJvbGxvIG1vcmFsIHkgZW4gZWwgcGVuc2FtaWVudG8gY3LDrXRpY28sIHN1YnJheWFuZG8gbGEgcmVsZXZhbmNpYSBkZWwgZGnDoWxvZ28geSBsYSByZWZsZXhpw7NuIGVuIGVsIGFwcmVuZGl6YWplLiBEZSBlc3RlIG1vZG8sIGxhIGVkdWNhY2nDs24gdGVuw61hIHVuIHByb3DDs3NpdG8gw6l0aWNvLCBhc29jaWFkbyBhIGxhIGZvcm1hY2nDs24gZGUgaW5kaXZpZHVvcyBjYXBhY2VzIGRlIHBhcnRpY2lwYXIgYWN0aXZhbWVudGUgZW4gbGEgdmlkYSBjw612aWNhLgogICAgICAudGFyamV0YS5iZy1henVsLTEucC00KHg9IjUwJSIgeT0iMzclIiBudW1lcm89IisiKQogICAgICAgIC5oNS5tYi0xIEVkYWQgTWVkaWEKICAgICAgICBwIER1cmFudGUgbGEgRWRhZCBNZWRpYSwgbGFzIGlkZWFzIHBlZGFnw7NnaWNhcyBhZG9wdGFyb24gdW4gZW5mb3F1ZSB0ZW9jw6ludHJpY28sIGRvbmRlIGxhIGVuc2XDsWFuemEgZXN0YWJhIHN1Ym9yZGluYWRhIGEgbGFzIGRvY3RyaW5hcyByZWxpZ2lvc2FzLgogICAgICAudGFyamV0YS5iZy1henVsLTEucC00KHg9IjUwJSIgeT0iNTclIiBudW1lcm89IisiKQogICAgICAgIC5oNS5tYi0xIFJlbmFjaW1pZW50byBlIElsdXN0cmFjacOzbgogICAgICAgIHAgRWwgUmVuYWNpbWllbnRvIHkgbGEgSWx1c3RyYWNpw7NuIHRyYWplcm9uIGNvbnNpZ28gdW4gY2FtYmlvIHJhZGljYWwsIGFsIGVtcGV6YXIgYSB2YWxvcmFyc2UgZWwgY29ub2NpbWllbnRvIGNpZW50w61maWNvIHkgZWwgcGVuc2FtaWVudG8gcmFjaW9uYWwgY29tbyBiYXNlcyBwYXJhIGVsIGFwcmVuZGl6YWplLiBGaWzDs3NvZm9zIGNvbW8gQ29tZW5pbyB5IFJvdXNzZWF1LCBqdWdhcm9uIHVuIHBhcGVsIGNlbnRyYWwgZW4gZXN0YXMgdHJhbnNmb3JtYWNpb25lcywgYWwgcHJvcG9uZXIgdW5hIGVkdWNhY2nDs24gY2VudHJhZGEgZW4gZWwgZGVzYXJyb2xsbyBuYXR1cmFsIGRlbCBuacOxbywgY29uIHVuIGVuZm9xdWUgbcOhcyBodW1hbmlzdGEgeSBtZW5vcyBkb2dtw6F0aWNvIChKaW3DqW5leiwgMjAxOSkuCiAgICAgIC50YXJqZXRhLmJnLWF6dWwtMS5wLTQoeD0iNTAlIiB5PSI3NyUiIG51bWVybz0iKyIpCiAgICAgICAgLmg1Lm1iLTEgU2lnbG8gWElYIHkgcHJpbmNpcGlvcyBkZWwgc2lnbG8gWFgKICAgICAgICBwIGZpZ3VyYXMgY29tbyBKb2huIERld2V5IGVuIEVzdGFkb3MgVW5pZG9zIHkgTWFyw61hIE1vbnRlc3NvcmkgZW4gSXRhbGlhLCByZXZvbHVjaW9uYXJvbiBsYSBlZHVjYWNpw7NuIGFsIGludHJvZHVjaXIgY29uY2VwdG9zIGNvbW8gZWwgYXByZW5kaXphamUgYWN0aXZvIHkgZWwgZW5mb3F1ZSBlbiBlbCBkZXNhcnJvbGxvIGludGVncmFsIGRlIGNhZGEgZXN0dWRpYW50ZS4gRGV3ZXkgYWJvZ8OzIHBvciB1bmEgZWR1Y2FjacOzbiBiYXNhZGEgZW4gbGEgZXhwZXJpZW5jaWEgeSBsYSBwYXJ0aWNpcGFjacOzbiBhY3RpdmEsIG1pZW50cmFzIHF1ZSBNb250ZXNzb3JpIHJlc2FsdMOzIGxhIGltcG9ydGFuY2lhIGRlIGxvcyBhbWJpZW50ZXMgcHJlcGFyYWRvcyB5IGxhIGF1dG9ub23DrWEgZGVsIGVzdHVkaWFudGUgZW4gZWwgcHJvY2VzbyBkZSBhcHJlbmRpemFqZSAoTWFydMOtbmV6LCAyMDIwKS4gRXN0b3MgZW5mb3F1ZXMgZnVlcm9uIGZ1bmRhbWVudGFsZXMgcGFyYSBlbCBzdXJnaW1pZW50byBkZWwgY29uc3RydWN0aXZpc21vIGVuIGVsIHNpZ2xvIFhYLCB1bmEgZGUgbGFzIHRlb3LDrWFzIG3DoXMgaW5mbHV5ZW50ZXMgZW4gbGEgcGVkYWdvZ8OtYSBjb250ZW1wb3LDoW5lYSwgbGEgY3VhbCBzb3N0aWVuZSBxdWUgZWwgY29ub2NpbWllbnRvIHNlIGNvbnN0cnV5ZSBhY3RpdmFtZW50ZSBtZWRpYW50ZSBsYSBpbnRlcmFjY2nDs24gY29uIGVsIGVudG9ybm8geSBsYSByZXNvbHVjacOzbiBkZSBwcm9ibGVtYXMuCgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtMTIuY29sLW1kLTExLmNvbC1sZy0xMC5teC1hdXRvCiAgICAgICAgcC5tYi00IEVsIHJlY29ycmlkbyBoaXN0w7NyaWNvIGRlIGxhcyB0ZW9yw61hcyBwZWRhZ8OzZ2ljYXMsIHBlcm1pdGUgb2JzZXJ2YXIgY8OzbW8gZXN0YXMgaGFuIGV2b2x1Y2lvbmFkbyBlbiByZXNwdWVzdGEgYSBsb3MgY2FtYmlvcyBzb2NpYWxlcywgY3VsdHVyYWxlcyB5IGNpZW50w61maWNvcy4gQ2FkYSBldGFwYSBkZSBsYSBoaXN0b3JpYSBkZSBsYSBwZWRhZ29nw61hIGhhIGFwb3J0YWRvIGlkZWFzIHkgZW5mb3F1ZXMgcXVlIGHDum4gaG95IHNpcnZlbiBkZSBmdW5kYW1lbnRvIHBhcmEgbGFzIHByw6FjdGljYXMgZWR1Y2F0aXZhcy4gRXN0ZSBhbsOhbGlzaXMgZGVtdWVzdHJhIHF1ZSBsYXMgdGVvcsOtYXMgcGVkYWfDs2dpY2FzIG5vIHNvbG8gcHJvcG9yY2lvbmFuIG1hcmNvcyBkZSByZWZlcmVuY2lhIHBhcmEgbGEgZW5zZcOxYW56YSwgc2lubyBxdWUgdGFtYmnDqW4gcmVmbGVqYW4gbGFzIGFzcGlyYWNpb25lcyB5IHZhbG9yZXMgZGUgY2FkYSBzb2NpZWRhZC4gCiAgICAgICAgLmQtZmxleC5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIGRpdi5kLWZsZXguYWxpZ24taXRlbXMtY2VudGVyLmJnLW1vcmFkby5weC0zLnB5LTQKICAgICAgICAgICAgaW1nLm1lLTQoc3R5bGU9IndpZHRoOiA5MHB4IiBzcmM9J0AvYXNzZXRzL2N1cnNvL3VuaWRhZC9pbWctMTQuc3ZnJywgYWx0PSdUZXh0byBxdWUgZGVzY3JpYmEgbGEgaW1hZ2VuJykKICAgICAgICAgICAgLmQtZmxleC5mbGV4LWNvbHVtbgogICAgICAgICAgICAgIHAudGV4dC1ib2xkLm1iLTEgTGVjdHVyYSByZWNvbWVuZGFkYXMKICAgICAgICAgICAgICBwLnBlLXhsLTUubWItMCBTZSBpbnZpdGEgYSBsZWVyIGVsIHRleHRvICJUZW9yw61hcyBkZWwgYXByZW5kaXphamUgeSBtb2RlbG9zIGVkdWNhdGl2b3M6IHJldmlzacOzbiBoaXN0w7NyaWNhIiBkZSBGb25zZWNhIHkgQmVuY29tbyAoMjAxMSksIGVsIGN1YWwgc2UgZW5jdWVudHJhIGVuIGVsIG1hdGVyaWFsIGRlIGFwb3lvLiBFc3RhIGxlY3R1cmEgZXMgdW5hIG9wb3J0dW5pZGFkIHZhbGlvc2EgcGFyYSBwcm9mdW5kaXphciBlbiBsYSBldm9sdWNpw7NuIGRlIGxhcyB0ZW9yw61hcyBkZWwgYXByZW5kaXphamUgeSBsb3MgbW9kZWxvcyBlZHVjYXRpdm9zIHF1ZSBoYW4gaW5mbHVpZG8gZW4gbGFzIHByw6FjdGljYXMgZG9jZW50ZXMgaGFzdGEgaG95LgoKICAgIC5iZy1mdWxsLXdpZHRoLmJvcmRlci10b3AuY29sb3ItcHJpbWFyaW8KICAgICAgLnAtNC5wLW1kLTUKICAgICAgICBoMiBNQVRFUklBTCBDT01QTEVNRU5UQVJJTwogICAgICAgIC5yb3cubWF0ZXJpYWwtY29tcGxlbWVudGFyaW8KICAgICAgICAgIC5jb2wtMTIuY29sLW1kLTYuY29sLWxnLTcKICAgICAgICAgICAgcCBMb3MgaW52aXRhbW9zIGEgZXhwbG9yYXIgZWwgbWF0ZXJpYWwgY29tcGxlbWVudGFyaW8gZGUgZXN0ZSBjdXJzbywgZW4gZXN0YSBzZWNjacOzbiBlbmNvbnRyYXLDoSByZWN1cnNvcyBxdWUgbGUgcGVybWl0aXLDoW4gcHJvZnVuZGl6YXIgIHkgZW5yaXF1ZWNlciBzdSBhcHJlbmRpemFqZSBlbiBsb3MgdGVtYXMgdHJhdGFkb3MgZW4gZXN0YSB1bmlkYWQuCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vd3d3LnJlc2VhcmNoZ2F0ZS5uZXQvcHVibGljYXRpb24vMzY3MjAzNzY4X0JhbmR1cmEnc19Tb2NpYWxfTGVhcm5pbmdfVGhlb3J5X1NvY2lhbF9Db2duaXRpdmVfTGVhcm5pbmdfVGhlb3J5IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgQmFuZHVyYSwgQS4gKDE5NzcpLiBTb2NpYWwgTGVhcm5pbmcgVGhlb3J5LiBQcmVudGljZSBIYWxsLiAKCgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9pY29uby15dC5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly95b3V0dS5iZS9DV2RJRzIxY3pSOD9zaT0yNG9BY0FNa3FtT0RZN3VfIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgU3Byb3V0cyBFc3Bhw7FvbCAoNiBlbmUgMjAyMykuIExhIHRlb3LDrWEgZGVsIGFwcmVuZGl6YWplIHNvY2lhbCBkZSBCYW5kdXJhLgoKICAgICAgICAgIC5jb2wtMTIuY29sLW1kLTYuY29sLWxnLTMub2Zmc2V0LWxnLTEKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbWF0ZXJpYWwtY29tcGxlbWVudGFyaW8uc3ZnJywgYWx0PScnKQo="},null]}